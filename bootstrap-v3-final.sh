#!/usr/bin/env bash
set -eo pipefail

# üõ†Ô∏è Fix package.json (ajout date-fns + suppression virgule finale)
# Injecte "date-fns" dans dependencies juste apr√®s l'accolade
sed -i '/"dependencies": *{/{n;s/{/&\
    "date-fns": "4.1.0",/;}' package.json
# Supprime la virgule finale apr√®s "yet-another-react-lightbox"
sed -i '/"yet-another-react-lightbox":/ s/,$//' package.json

echo "üöÄ D√©marrage de l‚Äôautomatisation LuxeEvents v3‚Ä¶"

# 1) Patch palette Tailwind
echo "1) Patch tailwind.config.js‚Ä¶"
if ! grep -q "luxeGold" tailwind.config.js 2>/dev/null; then
  sed -i "/extend: {/a\\
      colors: { luxeGold: '#D4AF37', luxeBlack: '#000000', luxeIvory: '#FFFFF0' },"
  echo "   ‚Üí Couleurs inject√©es"
else
  echo "   ‚Ñπ Couleurs d√©j√† pr√©sentes"
fi

# 2) Injection Plausible
echo "2) Injection Plausible dans public/index.html‚Ä¶"
if ! grep -q "plausible.io/js/plausible.js" public/index.html; then
  sed -i "/<head>/a\    <script async defer data-domain=\"ton-domaine.com\" src=\"https://plausible.io/js/plausible.js\"></script>" public/index.html
  echo "   ‚Üí Plausible ajout√©"
else
  echo "   ‚Ñπ Plausible d√©j√† pr√©sent"
fi

# 3) Fix Navbar.jsx (parenth√®se manquante)
echo "3) Correctif Navbar.jsx‚Ä¶"
NAV=src/components/Navbar.jsx
if ! grep -q 'return' "$NAV" || ! grep -q ')</' "$NAV"; then
  # On ferme la parenth√®se du return() et le bloc fonction
  sed -i '$a\      )\n  }' "$NAV"
  echo "   ‚Üí Parenth√®se ferm√©e dans $NAV"
else
  echo "   ‚Ñπ Navbar.jsx semble d√©j√† correct"
fi

# 4) G√©n√©ration des composants & pages
echo "4) G√©n√©ration des composants & pages‚Ä¶"
./bootstrap-v2-to-v3.sh    2>/dev/null || true
./fast-media-scaffold.sh   2>/dev/null || true
./scaffold-request-form.sh 2>/dev/null || true

# 5) Stub i18n
echo "5) Stub i18n‚Ä¶"
for LANG in fr en; do
  mkdir -p public/locales/$LANG
  cat > public/locales/$LANG/translation.json <<JSON
{
  "nav.home": "Accueil",
  "nav.services": "Services",
  "nav.media": "M√©dias",
  "nav.quote": "Devis"
}
JSON
done

# 6) Format & lint
echo "6) Prettier & ESLint --fix‚Ä¶"
pnpm exec prettier --write "src/**/*.{js,jsx,ts,tsx,json,css,md}" || true
pnpm exec eslint --fix "src/**/*.{js,jsx,ts,tsx}" || true

# 7) Tests (ne doit pas bloquer)
echo "7) Jest (passWithNoTests)‚Ä¶"
pnpm exec jest --passWithNoTests || echo "   ‚ö† Jest a retourn√© une erreur, on continue..."

# 8) Build & PWA
echo "8) Build + PWA‚Ä¶"
pnpm run build

# 9) Preview
echo "9) Serve dist‚Ä¶"
pnpm exec serve -s dist &

echo
echo "üéâ Automatisation termin√©e !"
echo "    ‚Ä¢ Preview ‚Üí http://localhost:5000"
echo "    ‚Ä¢ V√©rifie et remplace les stubs (images, traductions‚Ä¶)"

