# üõ†Ô∏è Fix package.json (ajout date-fns + suppression virgule finale)
sed -i '/"dependencies": *{/{n; s/{/&\n    "date-fns": "4.1.0",/}' package.json
sed -i '/"yet-another-react-lightbox":/ s/,$//'
#!/bin/bash
# üõ†Ô∏è Fix package.json (ajout date-fns + suppression virgule finale)
sed -i '/"dependencies": *{/{n; s/{/&\n    "date-fns": "4.1.0",/}' package.json
sed -i '/"yet-another-react-lightbox":/ s/,$//'
# üõ†Ô∏è Fix package.json (ajout date-fns + suppression virgule finale) 

sed -i '/"dependencies": *{/{n; s/{/&\n    "date-fns": "4.1.0",/}' package.json 

sed -i '/"yet-another-react-lightbox":/ s/,$//'
#!/usr/bin/env bash
set -euo pipefail

echo "üöÄ D√©marrage de l‚Äôautomatisation LuxeEvents v3‚Ä¶"

# 1) Patch palette Tailwind
echo "1Ô∏è‚É£ Patch tailwind.config.js‚Ä¶"
if ! grep -q "luxeGold" tailwind.config.js 2>/dev/null; then
  sed -i "/extend: {/a\\
      colors: { luxeGold: '#D4AF37', luxeBlack: '#000000', luxeIvory: '#FFFFF0' },"
  echo "   ‚Üí Couleurs inject√©es"
else
  echo "   ‚Ñπ Couleurs d√©j√† pr√©sentes"
fi

# 2) Injection Plausible
echo "2Ô∏è‚É£ Injection Plausible dans public/index.html‚Ä¶"
if ! grep -q "plausible.io/js/plausible.js" public/index.html; then
  sed -i "/<head>/a\    <script async defer data-domain=\"ton-domaine.com\" src=\"https://plausible.io/js/plausible.js\"></script>" public/index.html
  echo "   ‚Üí Plausible ajout√©"
else
  echo "   ‚Ñπ Plausible d√©j√† pr√©sent"
fi

# 3) Fix Navbar.jsx (parenth√®se manquante)
echo "3Ô∏è‚É£ Correctif Navbar.jsx‚Ä¶"
NAV=src/components/Navbar.jsx
if grep -qE "header>\\s*$" "$NAV"; then
  # On ferme la parenth√®se et le return
  sed -i '$i \)\n  }' "$NAV"
  echo "   ‚Üí Parenth√®se ferm√©e dans $NAV"
else
  echo "   ‚Ñπ Navbar.jsx semble correct"
fi

# 4) Generators (layout, media, form‚Ä¶)
echo "4Ô∏è‚É£ G√©n√©ration des composants & pages‚Ä¶"
./bootstrap-v2-to-v3.sh       2>/dev/null || true
./fast-media-scaffold.sh      2>/dev/null || true
./scaffold-request-form.sh    2>/dev/null || true

# 5) Stub i18n
echo "5Ô∏è‚É£ Stub i18n‚Ä¶"
for LANG in fr en; do
  mkdir -p public/locales/$LANG
  cat > public/locales/$LANG/translation.json <<JSON
{
  "nav.home": "Accueil",
  "nav.services": "Services",
  "nav.media": "M√©dias",
  "nav.quote": "Devis"
}
JSON
done

# 6) Format & lint
echo "6Ô∏è‚É£ Prettier & ESLint --fix‚Ä¶"
pnpm exec prettier --write "src/**/*.{js,jsx,ts,tsx,json,css,md}" || true
pnpm exec eslint --fix "src/**/*.{js,jsx,ts,tsx}" || true

# 7) Tests (ne doit pas bloquer)
echo "7Ô∏è‚É£ Jest (passWithNoTests)‚Ä¶"
pnpm exec jest --passWithNoTests || echo "   ‚ö†Ô∏è Jest a retourn√© une erreur, on continue..."

# 8) Build & PWA
echo "8Ô∏è‚É£ Build + PWA‚Ä¶"
pnpm run build

# 9) Preview
echo "9Ô∏è‚É£ Serve dist‚Ä¶"
pnpm exec serve -s dist &

echo
echo "üéâ Automatisation termin√©e !"
echo "   ‚Ä¢ Preview ‚Üí http://localhost:5000"
echo "   ‚Ä¢ N‚Äôoublie pas de v√©rifier et remplacer les stubs (images, traduction‚Ä¶)"
