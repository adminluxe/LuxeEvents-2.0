{
  "version": 3,
  "sources": ["../../.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/es6/react.js", "../../.pnpm/rfdc@1.4.1/node_modules/rfdc/index.js", "../../.pnpm/rfdc@1.4.1/node_modules/rfdc/default.js", "../../.pnpm/react-lottie-player@2.1.0_react@18.3.1/node_modules/react-lottie-player/src/makeLottiePlayer.js", "../../.pnpm/react-lottie-player@2.1.0_react@18.3.1/node_modules/react-lottie-player/src/LottiePlayer.js"],
  "sourcesContent": ["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict'\nmodule.exports = rfdc\n\nfunction copyBuffer (cur) {\n  if (cur instanceof Buffer) {\n    return Buffer.from(cur)\n  }\n\n  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length)\n}\n\nfunction rfdc (opts) {\n  opts = opts || {}\n  if (opts.circles) return rfdcCircles(opts)\n\n  const constructorHandlers = new Map()\n  constructorHandlers.set(Date, (o) => new Date(o))\n  constructorHandlers.set(Map, (o, fn) => new Map(cloneArray(Array.from(o), fn)))\n  constructorHandlers.set(Set, (o, fn) => new Set(cloneArray(Array.from(o), fn)))\n  if (opts.constructorHandlers) {\n    for (const handler of opts.constructorHandlers) {\n      constructorHandlers.set(handler[0], handler[1])\n    }\n  }\n\n  let handler = null\n\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    const keys = Object.keys(a)\n    const a2 = new Array(keys.length)\n    for (let i = 0; i < keys.length; i++) {\n      const k = keys[i]\n      const cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {\n        a2[k] = handler(cur, fn)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        a2[k] = fn(cur)\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o.constructor !== Object && (handler = constructorHandlers.get(o.constructor))) {\n      return handler(o, clone)\n    }\n    const o2 = {}\n    for (const k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      const cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {\n        o2[k] = handler(cur, clone)\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = clone(cur)\n      }\n    }\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o.constructor !== Object && (handler = constructorHandlers.get(o.constructor))) {\n      return handler(o, cloneProto)\n    }\n    const o2 = {}\n    for (const k in o) {\n      const cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {\n        o2[k] = handler(cur, cloneProto)\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = cloneProto(cur)\n      }\n    }\n    return o2\n  }\n}\n\nfunction rfdcCircles (opts) {\n  const refs = []\n  const refsNew = []\n\n  const constructorHandlers = new Map()\n  constructorHandlers.set(Date, (o) => new Date(o))\n  constructorHandlers.set(Map, (o, fn) => new Map(cloneArray(Array.from(o), fn)))\n  constructorHandlers.set(Set, (o, fn) => new Set(cloneArray(Array.from(o), fn)))\n  if (opts.constructorHandlers) {\n    for (const handler of opts.constructorHandlers) {\n      constructorHandlers.set(handler[0], handler[1])\n    }\n  }\n\n  let handler = null\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    const keys = Object.keys(a)\n    const a2 = new Array(keys.length)\n    for (let i = 0; i < keys.length; i++) {\n      const k = keys[i]\n      const cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {\n        a2[k] = handler(cur, fn)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        const index = refs.indexOf(cur)\n        if (index !== -1) {\n          a2[k] = refsNew[index]\n        } else {\n          a2[k] = fn(cur)\n        }\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o.constructor !== Object && (handler = constructorHandlers.get(o.constructor))) {\n      return handler(o, clone)\n    }\n    const o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (const k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      const cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {\n        o2[k] = handler(cur, clone)\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        const i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = clone(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o.constructor !== Object && (handler = constructorHandlers.get(o.constructor))) {\n      return handler(o, cloneProto)\n    }\n    const o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (const k in o) {\n      const cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur.constructor !== Object && (handler = constructorHandlers.get(cur.constructor))) {\n        o2[k] = handler(cur, cloneProto)\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        const i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = cloneProto(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n}\n", "'use strict'\n\nmodule.exports = require('./index.js')()\n", "// @ts-check\n/// <reference types=\"./index\" />\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React, {\n  memo, useRef, useEffect, useState, forwardRef, useCallback,\n} from 'react';\nimport equal from 'fast-deep-equal/es6/react';\n// @ts-expect-error todo\nimport clone from 'rfdc/default';\n\nconst emptyObject = {};\nconst noOp = () => undefined;\n\n/**\n * @param {import('lottie-web').LottiePlayer} args\n * @returns {React.FC<import('react-lottie-player').LottieProps>}\n */\nconst makeLottiePlayer = ({ loadAnimation }) => {\n  const Lottie = memo(forwardRef((\n    /** @type {import('react-lottie-player').LottieProps} */\n    params,\n    /** @type {React.ForwardedRef<import('lottie-web').AnimationItem | undefined>} */\n    forwardedRef,\n  ) => {\n    const {\n      play = null,\n      speed = 1,\n      direction = 1,\n      segments: segmentsIn = null,\n      goTo = null,\n      useSubframes = true,\n\n      // props picked to match from Lottie's config\n      renderer = 'svg',\n      loop = true,\n      rendererSettings: rendererSettingsIn = emptyObject,\n      audioFactory,\n\n      onLoad = noOp,\n      onComplete = noOp,\n      onLoopComplete = noOp,\n      onEnterFrame = noOp,\n      onSegmentStart = noOp,\n\n      // htmlProps remain and will pass on to the div element\n      ...props\n    } = params;\n\n    /** @type {import('react-lottie-player').LottieProps} */\n    let propsFiltered = props;\n    /** @type {object | undefined} */\n    let animationData;\n    /** @type {string | undefined} */\n    let path;\n\n    if ('animationData' in props) {\n      ({ animationData, ...propsFiltered } = props);\n    }\n    if ('path' in props) {\n      ({ path, ...propsFiltered } = props);\n    }\n\n    /** @type {React.MutableRefObject<HTMLDivElement | null>} */\n    const animElementRef = useRef(null);\n    /** @type {React.MutableRefObject<import('lottie-web').AnimationItem | undefined>} */\n    const animRef = useRef();\n\n    const getAnim = useCallback(() => {\n      if (animRef.current == null) throw new Error('Lottie ref is not set');\n      return animRef.current;\n    }, []);\n\n    const [ready, setReady] = useState(false);\n\n    const [segments, setSegments] = useState(segmentsIn);\n\n    // Prevent re-init\n    useEffect(() => {\n      if (!equal(segments, segmentsIn)) setSegments(segmentsIn);\n    }, [segmentsIn, segments]);\n\n    const [rendererSettings, setRendererSettings] = useState(rendererSettingsIn);\n\n    // Prevent re-init\n    useEffect(() => {\n      if (!equal(rendererSettings, rendererSettingsIn)) setRendererSettings(rendererSettingsIn);\n    }, [rendererSettingsIn, rendererSettings]);\n\n    // In order to remove listeners before animRef gets destroyed:\n    useEffect(() => () => getAnim().removeEventListener('complete', onComplete), [getAnim, onComplete]);\n    useEffect(() => () => getAnim().removeEventListener('loopComplete', onLoopComplete), [getAnim, onLoopComplete]);\n    useEffect(() => () => getAnim().removeEventListener('enterFrame', onEnterFrame), [getAnim, onEnterFrame]);\n    useEffect(() => () => getAnim().removeEventListener('segmentStart', onSegmentStart), [getAnim, onSegmentStart]);\n    useEffect(() => () => getAnim().removeEventListener('DOMLoaded', onLoad), [getAnim, onLoad]);\n\n    const setLottieRefs = useCallback((/** @type {import('lottie-web').AnimationItem | undefined} */ newRef) => {\n      animRef.current = newRef;\n      if (typeof forwardedRef === 'function') {\n        forwardedRef(newRef);\n      } else if (forwardedRef !== undefined && forwardedRef !== null) {\n        // eslint-disable-next-line no-param-reassign -- mutating a ref is intended\n        forwardedRef.current = newRef;\n      }\n    }, [forwardedRef]);\n\n    useEffect(() => {\n      function parseAnimationData() {\n        if (animationData == null || typeof animationData !== 'object') return animationData;\n\n        // https://github.com/mifi/react-lottie-player/issues/11#issuecomment-879310039\n        // https://github.com/chenqingspring/vue-lottie/issues/20\n        if ('default' in animationData && typeof animationData.default === 'object') {\n          return clone(animationData.default);\n        }\n        // cloneDeep to prevent memory leak. See #35\n        return clone(animationData);\n      }\n\n      if (animElementRef.current == null) throw new Error('animElementRef is not set');\n\n      // console.log('init')\n      const lottie = loadAnimation({\n        animationData: parseAnimationData(),\n        path,\n        container: animElementRef.current,\n        renderer,\n        loop: false,\n        autoplay: false, // We want to explicitly control playback\n        rendererSettings,\n        ...(audioFactory ? { audioFactory } : {}),\n      });\n      setLottieRefs(lottie);\n\n      const onDomLoaded = () => setReady(true);\n\n      getAnim().addEventListener('DOMLoaded', onDomLoaded);\n\n      return () => {\n        getAnim().removeEventListener('DOMLoaded', onDomLoaded);\n        setReady(false);\n        getAnim().destroy();\n        setLottieRefs(undefined);\n      };\n    }, [loop, renderer, rendererSettings, animationData, path, audioFactory, setLottieRefs, getAnim]);\n\n    useEffect(() => {\n      getAnim().addEventListener('DOMLoaded', onLoad);\n    }, [getAnim, onLoad]);\n\n    useEffect(() => {\n      getAnim().addEventListener('complete', onComplete);\n    }, [getAnim, onComplete]);\n\n    useEffect(() => {\n      getAnim().addEventListener('loopComplete', onLoopComplete);\n    }, [getAnim, onLoopComplete]);\n\n    useEffect(() => {\n      getAnim().addEventListener('enterFrame', onEnterFrame);\n    }, [getAnim, onEnterFrame]);\n\n    useEffect(() => {\n      getAnim().addEventListener('segmentStart', onSegmentStart);\n    }, [getAnim, onSegmentStart]);\n\n    useEffect(() => {\n      if (!ready) return;\n      getAnim().loop = loop;\n    }, [ready, loop, getAnim]);\n\n    const wasPlayingSegmentsRef = useRef(false);\n\n    useEffect(() => {\n      if (!ready) return;\n\n      // Without this code, when playback restarts, it will not play in reverse:\n      // https://github.com/mifi/react-lottie-player/issues/19\n      function playReverse(/** @type {number} */ lastFrame) {\n        getAnim().goToAndPlay(lastFrame, true);\n        getAnim().setDirection(direction);\n      }\n\n      if (play === true) {\n        const force = true;\n        if (segments) {\n          getAnim().playSegments(segments, force);\n          wasPlayingSegmentsRef.current = true;\n\n          // This needs to be called after playSegments or it will not play backwards\n          if (direction === -1) {\n            // TODO What if more than one segment\n            const lastFrame = typeof segments[1] === 'number' ? segments[1] : segments[1][1];\n            playReverse(lastFrame);\n          }\n        } else {\n          // If we called playSegments last time, the segments are stored as a state in the lottie object\n          // Need to reset segments or else it will still play the old segments also when calling play()\n          // wasPlayingSegmentsRef: Only reset segments if playSegments last time, because resetSegments will also reset playback position\n          // https://github.com/airbnb/lottie-web/blob/master/index.d.ts\n          if (wasPlayingSegmentsRef.current) getAnim().resetSegments(force);\n          wasPlayingSegmentsRef.current = false;\n\n          if (direction === -1) {\n            const lastFrame = getAnim().getDuration(true);\n            playReverse(lastFrame);\n          } else {\n            getAnim().play();\n          }\n        }\n      } else if (play === false) {\n        getAnim().pause();\n      }\n    }, [play, segments, ready, direction, getAnim]);\n\n    useEffect(() => {\n      if (!ready) return;\n      if (Number.isNaN(speed)) return;\n      getAnim().setSpeed(speed);\n    }, [speed, ready, getAnim]);\n\n    // This handles the case where only direction has changed (direction is not a dependency of the other effect that calls setDirection)\n    useEffect(() => {\n      if (!ready) return;\n      getAnim().setDirection(direction);\n    }, [direction, getAnim, ready]);\n\n    useEffect(() => {\n      if (!ready) return;\n      if (goTo == null) return;\n      const isFrame = true; // TODO\n      if (play) getAnim().goToAndPlay(goTo, isFrame);\n      else getAnim().goToAndStop(goTo, isFrame);\n    }, [getAnim, goTo, play, ready]);\n\n    useEffect(() => {\n      if (getAnim().setSubframe) getAnim().setSubframe(useSubframes);\n      // console.log(getAnim().isSubframeEnabled)\n    }, [getAnim, useSubframes]);\n\n    return (\n      // eslint-disable-next-line react/jsx-filename-extension\n      <div\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...propsFiltered}\n        ref={animElementRef}\n      />\n    );\n  }));\n\n  return Lottie;\n};\n\nexport default makeLottiePlayer;\n", "import lottie from 'lottie-web';\nimport makeLottiePlayer from './makeLottiePlayer';\n\nexport default makeLottiePlayer(lottie);\n"],
  "mappings": "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",
  "names": ["require_react", "equal", "handler", "clone", "emptyObject", "noOp", "undefined", "makeLottiePlayer", "_ref", "loadAnimation", "Lottie", "memo", "forwardRef", "params", "forwardedRef", "_params$play", "play", "_params$speed", "speed", "_params$direction", "direction", "_params$segments", "segments", "segmentsIn", "_params$goTo", "goTo", "_params$useSubframes", "useSubframes", "_params$renderer", "renderer", "_params$loop", "loop", "_params$rendererSetti", "rendererSettings", "rendererSettingsIn", "audioFactory", "_params$onLoad", "onLoad", "_params$onComplete", "onComplete", "_params$onLoopComplet", "onLoopComplete", "_params$onEnterFrame", "onEnterFrame", "_params$onSegmentStar", "onSegmentStart", "props", "_objectWithoutPropertiesLoose", "propsFiltered", "animationData", "path", "_props", "_props2", "animElementRef", "useRef", "animRef", "getAnim", "useCallback", "current", "Error", "_useState", "useState", "ready", "setReady", "_useState2", "setSegments", "useEffect", "equal", "_useState3", "setRendererSettings", "removeEventListener", "setLottieRefs", "newRef", "parseAnimationData", "clone", "lottie", "_extends", "container", "autoplay", "onDomLoaded", "addEventListener", "destroy", "wasPlayingSegmentsRef", "playReverse", "lastFrame", "goToAndPlay", "setDirection", "force", "playSegments", "resetSegments", "getDuration", "pause", "Number", "isNaN", "setSpeed", "isFrame", "goToAndStop", "setSubframe", "React", "createElement", "ref"]
}
