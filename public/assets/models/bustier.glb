/*
  components/Hero3D.jsx
  ---------------------
  Hero Couture 3D: Low-poly bustier model rotating with interactive lighting.
  Tech: React Three Fiber | drei

  Prérequis:
    npm install three @react-three/fiber @react-three/drei

  Usage:
    import Hero3D from './components/Hero3D'
    <Hero3D />

  Ce composant va afficher :
    • Un <Canvas> fullscreen
    • Charger un modèle glTF (assets/models/bustier.glb)
    • Faire tourner le modèle avec auto-rotation
    • Ajouter des lumières spot gold et turquoise
    • Ajouter un effet hover pour intensifier la lumière
*/

import React, { useRef } from 'react'
import { Canvas, useFrame } from '@react-three/fiber'
import { useGLTF, OrbitControls } from '@react-three/drei'

function Model({ hoverIntensity }) {
  const gltf = useGLTF('/assets/models/bustier.glb')
  const ref = useRef()
  useFrame((state, delta) => {
    ref.current.rotation.y += delta * 0.2
    // pulsate light intensity on hover
    gltf.scene.traverse((child) => {
      if (child.isMesh && child.material.emissive) {
        child.material.emissiveIntensity = hoverIntensity.current
      }
    })
  })
  return <primitive ref={ref} object={gltf.scene} />
}

export default function Hero3D() {
  const hoverIntensity = useRef(0.5)

  return (
    <Canvas
      style={{ height: '100vh', width: '100%' }}
      camera={{ position: [0, 1, 3], fov: 50 }}
    >
      {/* Lights */}
      <ambientLight intensity={0.3} />
      <spotLight
        position={[5, 5, 5]}
        angle={0.3}
        color="gold"
        intensity={hoverIntensity.current}
      />
      <spotLight
        position={[-5, 2, -5]}
        angle={0.3}
        color="turquoise"
        intensity={0.8}
      />
      {/* Model */}
      <Model hoverIntensity={hoverIntensity} />
      {/* Controls for dev */}
      <OrbitControls
        enableZoom={false}
        onPointerOver={() => (hoverIntensity.current = 1.2)}
        onPointerOut={() => (hoverIntensity.current = 0.5)}
      />
    </Canvas>
  )
}
