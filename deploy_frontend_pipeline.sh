#!/bin/bash

# === üìÖ Timestamp pour backup ===
NOW=$(date +"%Y-%m-%d_%H-%M-%S")
BACKUP_FILE="luxeevents-frontend-backup-$NOW.tar.gz"

echo "üì¶ [1/6] Sauvegarde du projet frontend en cours..."
tar -czf "$BACKUP_FILE" . --exclude=node_modules --exclude=dist
echo "‚úÖ Sauvegarde cr√©√©e : $BACKUP_FILE"

echo "üîß [2/6] Build de l'app React (vite)..."
npm run build
if [ $? -ne 0 ]; then
    echo "‚ùå √âchec du build. D√©ploiement annul√©."
    exit 1
fi
echo "‚úÖ Build termin√© avec succ√®s"

echo "‚¨Ü [3/6] Push Git vers GitHub..."
git add .
git commit -m "üöÄ Auto-deploy $NOW"
git push origin main
echo "‚úÖ Push effectu√©"

echo "üåê [4/6] D√©ploiement Vercel..."
if [ -z "$VERCEL_TOKEN" ]; then
    echo "‚ùå VERCEL_TOKEN non d√©fini. Exporte-le avant d'ex√©cuter ce script."
    exit 1
fi

# Remplace ceci par l‚ÄôID r√©el de ton projet (copi√© depuis Vercel)
PROJECT_ID="prj_2t3z8dnrD"

RESPONSE=$(curl -s -X POST "https://api.vercel.com/v1/integrations/deploy/$PROJECT_ID" \
  -H "Authorization: Bearer $VERCEL_TOKEN" \
  -H "Content-Type: application/json")

if echo "$RESPONSE" | grep -q '"name":"deployment-created"'; then
    echo "‚úÖ D√©ploiement Vercel d√©clench√© avec succ√®s !"
else
    echo "‚ùå √âchec du d√©clenchement Vercel."
    echo "üßæ R√©ponse re√ßue :"
    echo "$RESPONSE"
    MSG="‚ùå √âchec du d√©ploiement Vercel √† $NOW."
    send_sms=true
    exit_code=1
fi

echo "üìÇ [5/6] Nettoyage optionnel (temp files ou autres)..."
# Ici tu peux ajouter un `rm -rf dist/` si tu veux nettoyer apr√®s build
echo "‚úÖ Nettoyage termin√© (aucune action sp√©cifique)"

echo "üì± [6/6] Envoi de la notification SMS via Twilio..."

if [ -z "$MSG" ]; then
    MSG="‚úÖ D√©ploiement frontend luxeevents.me termin√© avec succ√®s √† $NOW"
fi

if [ -n "$TWILIO_ACCOUNT_SID" ] && [ -n "$TWILIO_AUTH_TOKEN" ] && [ -n "$TWILIO_FROM" ] && [ -n "$TWILIO_TO" ]; then
    curl -s -X POST "https://api.twilio.com/2010-04-01/Accounts/$TWILIO_ACCOUNT_SID/Messages.json" \
    --data-urlencode "Body=$MSG" \
    --data-urlencode "From=$TWILIO_FROM" \
    --data-urlencode "To=$TWILIO_TO" \
    -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN" > /dev/null
    echo "‚úÖ Notification envoy√©e √† $TWILIO_TO"
else
    echo "‚ö†Ô∏è Variables Twilio incompl√®tes, SMS non envoy√©"
fi

exit ${exit_code:-0}
